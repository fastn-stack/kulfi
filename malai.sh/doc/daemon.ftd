-- import: malai.sh/components/page as p

-- p.doc-page: Daemon Management

Managing the malai daemon for production infrastructure clusters.
Complete guide for cluster administrators and DevOps teams.

-- ds.heading-large: Daemon Management

The malai daemon provides P2P infrastructure for your clusters. This guide covers:

- [Daemon Status and Health Checks](/doc/daemon/#status)
- [Starting and Stopping the Daemon](/doc/daemon/#lifecycle)  
- [Configuration Management](/doc/daemon/#config)
- [Troubleshooting Common Issues](/doc/daemon/#troubleshooting)
- [Production Deployment](/doc/daemon/#production)

-- ds.heading-medium: Daemon Status and Health Checks
id: status

Check comprehensive daemon status including cluster health, socket communication, and configuration validation.

-- ds.code:
lang: bash

# Comprehensive daemon status
malai status

# Check specific cluster configuration
malai rescan --check company

# Test daemon responsiveness
malai rescan  # Should complete immediately if daemon healthy

-- ds.markdown:

**Status Output Includes:**
- **Daemon State**: Running, starting, crashed, or not running
- **Socket Communication**: Unix socket availability and responsiveness testing
- **Cluster Roles**: All clusters with their roles and machine counts
- **Configuration Health**: Validation status for all cluster configs
- **File Locations**: Lock file and socket file paths for debugging

-- ds.heading-medium: Starting and Stopping the Daemon
id: lifecycle

-- ds.heading-small: Development Mode

For development and testing:

-- ds.code:
lang: bash

# Start in foreground (shows all output)
malai daemon --foreground

# Start in background (detaches from terminal)
malai daemon

-- ds.heading-small: Production Mode

For production servers with systemd:

-- ds.code:
lang: bash

# Create systemd service (run as cluster admin)
sudo tee /etc/systemd/system/malai.service << EOF
[Unit]
Description=malai P2P Infrastructure Daemon
After=network.target

[Service]
Type=simple
ExecStart=/usr/local/bin/malai daemon --foreground
Environment=MALAI_HOME=/opt/malai
User=malai
Group=malai
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

# Enable and start service
sudo systemctl enable malai
sudo systemctl start malai

# Check status
sudo systemctl status malai

-- ds.heading-medium: Configuration Management  
id: config

Manage cluster configurations dynamically without daemon restarts.

-- ds.code:
lang: bash

# Create new cluster (automatically updates running daemon)
malai cluster init production

# Add new machine (automatically updates running daemon)  
malai machine init <cluster-id52> staging

# Manual rescan (selective or full)
malai rescan production  # Only rescans 'production' cluster
malai rescan            # Rescans all clusters

# Validate configurations
malai rescan --check production  # Check 'production' only
malai rescan --check            # Check all clusters

-- ds.markdown:

**Key Features:**
- **Automatic Updates**: Init commands automatically update running daemon via Unix socket
- **Selective Rescans**: Target specific clusters to avoid disrupting stable configurations
- **Strict Error Handling**: Configuration errors fail immediately with clear diagnostics
- **Zero Downtime**: Configuration changes don't require daemon restarts

-- ds.heading-medium: Troubleshooting Common Issues
id: troubleshooting

-- ds.heading-small: Daemon Won't Start

-- ds.code:
lang: bash

# Check if another daemon is running
malai status

# Remove stale lock file if daemon crashed
rm $MALAI_HOME/malai.lock

# Check cluster configurations
malai rescan --check

-- ds.heading-small: Commands Not Working

-- ds.code:
lang: bash

# Verify daemon is responsive
malai status  # Should show "RUNNING âœ…" and "RESPONSIVE"

# Test cluster communication
malai web01.company echo "test"

# Check configuration validity
malai rescan --check

-- ds.heading-small: Socket Communication Errors

-- ds.code:
lang: bash

# Remove stale socket and restart
rm $MALAI_HOME/malai.socket
malai daemon --foreground

-- ds.heading-medium: Production Deployment
id: production

Best practices for production malai deployments.

-- ds.heading-small: Security Setup

-- ds.code:
lang: bash

# Create dedicated user
sudo useradd -r -s /bin/false malai
sudo mkdir -p /opt/malai
sudo chown malai:malai /opt/malai

# Generate cluster manager identity  
sudo -u malai env MALAI_HOME=/opt/malai malai cluster init production

-- ds.heading-small: Monitoring and Logging

-- ds.code:
lang: bash

# Enable structured logging (add to systemd service)
Environment=RUST_LOG=malai=info

# Monitor daemon logs
sudo journalctl -u malai -f

# Regular health checks
sudo -u malai env MALAI_HOME=/opt/malai malai status

-- ds.markdown:

**Production Logging Features:**
- **Structured Tracing**: All daemon operations logged with tracing::info/warn/error
- **Socket Operations**: CLI command processing logged for audit trails
- **P2P Events**: Cluster listener startup/failure events tracked
- **Configuration Changes**: All rescan operations logged with cluster details

-- ds.heading-small: Performance Optimization

-- ds.code:
lang: bash

# Use daemon mode for connection reuse
malai daemon  # Keeps connections warm

# Monitor performance
malai status  # Shows daemon health and responsiveness

-- ds.markdown:

**Performance Benefits:**
- **Connection Pooling**: Daemon mode reuses P2P connections
- **Fast Rescans**: Unix socket communication vs daemon restarts
- **Selective Updates**: Only affected clusters reloaded, not entire daemon
- **Health Monitoring**: Real-time daemon responsiveness testing
